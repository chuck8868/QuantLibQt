<map id="G" name="G">
<area shape="rect" id="node2" href="$class_quant_lib_1_1_quote.html" title="purely virtual base class for market observables" alt="" coords="327,1767,444,1887"/>
<area shape="rect" id="node4" href="$class_quant_lib_1_1_observable.html" title="Object that notifies its changes to a set of observers." alt="" coords="284,913,431,1103"/>
<area shape="rect" id="node19" href="$class_quant_lib_1_1_lazy_object.html" title="Framework for calculation on demand and result caching." alt="" coords="148,1706,303,1947"/>
<area shape="rect" id="node8" href="$class_quant_lib_1_1_observer.html" title="Object that gets notified when a given observable changes." alt="" coords="165,461,299,651"/>
<area shape="rect" id="node14" title="STL class." alt="" coords="275,157,373,243"/>
<area shape="rect" id="node23" href="$classbool.html" title="{bool\n||}" alt="" coords="119,965,164,1051"/>
<area shape="rect" id="node27" href="$class_quant_lib_1_1_date.html" title="Concrete date class." alt="" coords="572,1229,745,2424"/>
<area shape="rect" id="node35" href="$class_quant_lib_1_1_period.html" title="{QuantLib::Period\n|&#45; length_\l&#45; units_\l|+ Period()\l+ Period()\l+ Period()\l+ length()\l+ units()\l+ frequency()\l+ operator+=()\l+ operator&#45;=()\l+ operator/=()\l+ normalize()\l}" alt="" coords="1167,1697,1284,1956"/>
<area shape="rect" id="node41" href="$class_quant_lib_1_1_handle.html" title="{QuantLib::Handle\&lt; Quote \&gt;\n|# link_\l|+ currentLink()\l+ operator&#45;\&gt;()\l+ operator*()\l+ empty()\l+ operator boost::shared_ptr\&lt; Observable \&gt;()\l+ operator==()\l+ operator!=()\l+ operator\&lt;()\l+ Handle()\l+ Handle()\l* Handle()\l* Handle()\l}" alt="" coords="1308,1689,1591,1965"/>
<area shape="rect" id="node45" href="$class_quant_lib_1_1_handle.html" title="Shared handle to an observable." alt="" coords="1303,870,1585,1146"/>
</map>
